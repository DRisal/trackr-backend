apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.8

project.ext {
    springVersion = '4.0.1.RELEASE'
    springSecurityVersion = '3.2.0.RELEASE'
}

version = '1.0'

sourceSets {
    war {
        exclude 'WEB-INF/app/node_modules/*'
    }
}

repositories {
    mavenCentral()
}

//TODO: this shouldn't be before compileJava..
compileJava.dependsOn('npm')
compileJava.dependsOn('bower')

test.doLast {
    tasks['gruntTest'].execute()
}

dependencies {
    compile "org.springframework:spring-context:$project.springVersion"
    compile "org.springframework:spring-webmvc:$project.springVersion"
    compile "javax.servlet:jstl:1.2"
    compile "com.fasterxml.jackson.core:jackson-databind:2.3.1"
    compile "ch.qos.logback:logback-classic:1.0.13"

    //security
    compile "org.springframework.security:spring-security-openid:$project.springSecurityVersion"
    compile "org.springframework.security:spring-security-web:$project.springSecurityVersion"
    compile "org.springframework.security:spring-security-config:$project.springSecurityVersion"
    compile "org.springframework.security:spring-security-aspects:$project.springSecurityVersion"

    //database
    compile "commons-dbcp:commons-dbcp:1.4"
    compile "com.h2database:h2:1.3.170"
    compile "postgresql:postgresql:9.1-901.jdbc4"
    compile "org.springframework.data:spring-data-jpa:1.4.3.RELEASE"
    compile "org.springframework:spring-orm:$project.springVersion"
    compile "org.hibernate:hibernate-entitymanager:4.1.8.Final"

    compile "org.projectlombok:lombok:1.12.4"

    //tomcat
    providedCompile "javax.servlet:javax.servlet-api:3.0.1"

    testCompile "org.springframework:spring-test:$project.springVersion"
    testCompile group: "junit", name: "junit", version: "4.11"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

// install bower dependencies
task bower(type: Exec) {
    workingDir 'src/main/webapp/WEB-INF/app'
    commandLine 'bower'
    args 'install'
}

// install npm dependencies
task npm(type: Exec) {
    workingDir 'src/main/webapp/WEB-INF/app'
    commandLine 'npm'
    args 'install'
}

// execute grunt tests
task gruntTest(type: Exec) {
    workingDir 'src/main/webapp/WEB-INF/app'
    commandLine 'grunt'
    args 'test'
}
