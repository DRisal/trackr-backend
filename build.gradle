apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.8
version = '1.0'
project.ext {
    springVersion = '4.0.1.RELEASE'
    springSecurityVersion = '3.2.0.RELEASE'
    tomcatHome = "$System.env.TOMCAT_HOME"
}
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven {
        url 'http://repo.springsource.org/libs-milestone/'
    }
}

sourceSets {
    war {
        exclude 'WEB-INF/app/node_modules/*'
    }
}

war.doFirst {
    tasks['gruntDist'].execute()
}

war {
    //to tell tomcat to use it as the root application we use ROOT.war as the name
    archiveName "ROOT.war"
}

//TODO: this shouldn't be before compileJava..
compileJava.dependsOn('npm')
compileJava.dependsOn('bowerInstall')

test.doLast {
    tasks['gruntTest'].execute()
}

dependencies {
    compile "org.springframework:spring-context:$project.springVersion"

    //web
    compile "org.springframework:spring-webmvc:$project.springVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:2.3.1"
    compile "org.codehaus.jackson:jackson-core-asl:1.9.13"
    compile "javax.servlet:jstl:1.2"
    compile 'org.springframework.data:spring-data-rest-webmvc:2.0.0.RELEASE'

    compile "javax.validation:validation-api:1.0.0.GA"
    compile "ch.qos.logback:logback-classic:1.0.13"
    compile "org.projectlombok:lombok:1.12.4"

    //security
    compile "org.springframework.security:spring-security-openid:$project.springSecurityVersion"
    compile "org.springframework.security:spring-security-web:$project.springSecurityVersion"
    compile "org.springframework.security:spring-security-config:$project.springSecurityVersion"
    compile "org.springframework.security:spring-security-aspects:$project.springSecurityVersion"

    //database
    compile "commons-dbcp:commons-dbcp:1.4"
    compile "com.h2database:h2:1.3.170"
    compile "postgresql:postgresql:9.1-901.jdbc4"
    compile "org.springframework.data:spring-data-jpa:1.4.3.RELEASE"
    compile "org.springframework:spring-orm:$project.springVersion"
    compile "org.hibernate:hibernate-entitymanager:4.1.8.Final"
    compile "org.hibernate:hibernate-validator:4.3.1.Final"
    //needed because java 8 compability
    compile "org.javassist:javassist:3.18.1-GA"

    //tomcat
    providedCompile "javax.servlet:javax.servlet-api:3.0.1"

    testCompile "org.springframework:spring-test:$project.springVersion"
    testCompile group: "junit", name: "junit", version: "4.11"
    testCompile("org.echocat.jomon:testing:1.4.3") {
        exclude group: "org.mockito"
    }
    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile "com.jayway.jsonpath:json-path:0.9.1"
    testCompile "org.glassfish:javax.json:1.0"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

//prune old dependencies
task bowerPrune(type: Exec) {
    workingDir = 'src/main/webapp/WEB-INF/app'
    executable = 'bower'
    args = ['prune']
}

// install bower dependencies
task bowerInstall(type: Exec) {
    workingDir = 'src/main/webapp/WEB-INF/app'
    executable = 'bower'
    args = ['install']
}
bowerInstall.dependsOn('bowerPrune')

// install npm dependencies
task npm(type: Exec) {
    workingDir 'src/main/webapp/WEB-INF/app'
    executable = 'npm'
    args = ['install']
}

// execute grunt tests
task gruntTest(type: Exec) {
    workingDir 'src/main/webapp/WEB-INF/app'
    executable = 'grunt'
    args = ['test']
}

//build the distibution
task gruntDist(type: Exec) {
    workingDir 'src/main/webapp/WEB-INF/app'
    executable = 'grunt'
    args = ['dist']
}

//copy the war to the tomcat directory
task deployToTomcat(type: Copy) {
    from war
    into "${project.tomcatHome}/webapps"
}
